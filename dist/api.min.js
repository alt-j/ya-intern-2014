var API=new function(){this.utils={},this.transports={};var a=this,b=function(b){var c,d;if(!b.transport)throw new Error("Card haven't type of transport");return c=b.transport,d=c.charAt(0).toUpperCase()+c.slice(1),delete b.transport,a.transports.hasOwnProperty(d)&&"function"==typeof a.transports[d]?new a.transports[d](b):(b.name=b.name||c,new a.transports.Transport(b))};this.getTripDescription=function(a){for(var c=[],d={from:[]},e={from:[],to:[]},f=a.length-1;f>=0;f--)a[f]=new b(a[f]),d.from[a[f].from]=a[f],-1===e.from.indexOf(a[f].from)&&e.from.push(a[f].from),-1===e.to.indexOf(a[f].to)&&e.to.push(a[f].to);if(e.to.length!==a.length||e.from.length!==a.length)throw new Error("Error: impossible to make a trip from this list");var g=e.from.filter(function(a){return e.to.indexOf(a)<0});if(g.length>1||0==g.length)throw new Error("Error: impossible to make a trip from this list");return g=g[0],function h(a){d.from[a]&&(c.push(c.length+". "+d.from[a].describe()),h(d.from[a].to))}(g),c.join("\n")}};API.utils.extend=function(a,b){var c=function(){};c.prototype=b.prototype,a.prototype=new c,a.prototype.constructor=a,a.parent=b.prototype},API.transports.Transport=function(a){if(!a.from||!a.to)throw new Error("Transport params isn't contains one of the required paramters: from, to");this.from=a.from,this.to=a.to,a.notes&&(this.notes=a.notes),a.name&&(this.name=a.name)},API.transports.Transport.prototype.describe=function(){return["From "+this.from+" to "+this.to,this.name?" by "+this.name:"",this.notes?". "+this.notes:""].join("")},API.transports.Bus=function(a){try{API.transports.Bus.parent.constructor.call(this,a)}catch(b){throw new Error("Bus:"+b.message)}if(!a.seat)throw new Error("Bus params isn't contains required paramter: seat");this.seat=a.seat},API.utils.extend(API.transports.Bus,API.transports.Transport),API.transports.Bus.prototype.describe=function(){var a=["Take the bus"+(this.name?' "'+this.name+'"':"")+" from "+this.from+" to "+this.to,"any"===this.seat?"No seat assignment":"Seat: "+this.seat].join(". ");return this.notes&&(a+=". "+this.notes),a},API.transports.Plane=function(a){try{API.transports.Plane.parent.constructor.call(this,a)}catch(b){throw new Error("Plane:"+b.message)}if(!(a.flight&&a.gate&&a.seat))throw new Error("Plane params isn't contains one of required paramters: flight, gate, seat");this.flight=a.flight,this.gate=a.gate,this.seat=a.seat},API.utils.extend(API.transports.Plane,API.transports.Transport),API.transports.Plane.prototype.describe=function(){var a=["From "+this.from+" take ﬂight "+this.flight+" to "+this.to,"Gate: "+this.gate,"any"===this.seat?"No seat assignment":"Seat: "+this.seat].join(". ");return this.notes&&(a+=". "+this.notes),a},API.transports.Train=function(a){try{API.transports.Train.parent.constructor.call(this,a)}catch(b){throw new Error("Train:"+b.message)}if(!a.number||!a.seat)throw new Error("Train params isn't contains one of required paramters: number, seat");this.number=a.number,this.seat=a.seat},API.utils.extend(API.transports.Train,API.transports.Transport),API.transports.Train.prototype.describe=function(){var a=["Take train "+this.number+" from"+this.from+" to "+this.to,"any"===this.seat?"Без присвоения мест":"Место номер: "+this.seat].join(". ");return this.notes&&(a+=". "+this.notes),a};